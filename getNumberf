int *getNumber(char *a, int *sign, int *eps)
{
	int num_sign = 1;
	int *b = malloc(size_default * sizeof(int));
	int count = 0; // кол-во цифр (максимум 30)
	int point_flag = 0; // наличие точки
	int e_flag = 0, e = 0, e_number = 0, e_sign = 1, extra_e = 0;
	for(int i = 0; a[i] != '*'; i++)
	{
		if ( (charToInt(a[i]) != -1) && (e_flag == 0) && !((count == 0) && (a[i] == '0')) )
		{
			b[count] = charToInt(a[i]);
			count++;
			if (point_flag != 0)
				extra_e++;
			if (count > 30)
			{
				printf("\nОШИБКА: превышено допустимое кол-во цифр в числе\n");
				return NULL;
			}
		}
		else if ((a[i] == '-') && (e_flag == 0))
			num_sign = -1;
		else if ((charToInt(a[i]) != -1) && (e_flag == 1))
		{
			e = e * 10 + charToInt(a[i]);
			e_number++;
			if (e_number >5)
			{
				printf("\nОШИБКА: превышено допустимое кол-во цифр в разряде\n");
				return NULL;
			}
		}
		else if ((a[i] == '.') || (a[i] == ','))
			point_flag = 1;
		else if ((a[i] == 'e') || (a[i] == 'E'))
			e_flag = 1;
		else if ((e_flag == 1) && (a[i] == '-'))
			e_sign = -1;
	}

	b = (int*) realloc(b, count * sizeof(int));
	if (b == NULL)
		printf("\nОШИБКА: не удалось выделить память\n");

	e *= e_sign;
	e -= extra_e;
	*eps = e;
	*sign = num_sign;

	return b;
}
